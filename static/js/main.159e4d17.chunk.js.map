{"version":3,"sources":["components/WebMapView.jsx","components/CardComponent.jsx","components/Person.jsx","components/PersonList.jsx","App.jsx","index.js"],"names":["WebMapView","props","mapRef","useRef","useEffect","loadModules","css","then","ArcGISMap","MapView","Graphic","map","basemap","posGraphic","geometry","type","longitude","long","latitude","lat","symbol","color","outline","width","view","container","current","center","zoom","ui","components","graphics","add","className","ref","style","height","cardStyle","textAlign","alignItems","padding","textStyle","fontWeight","fontFamily","fontSize","imgStyle","backgroundColor","hexToRgb","CardComponent","src","apod","PersonStyle","textDecoration","Person","Fragment","href","name","target","listStyle","PersonList","list","require","titleStyle","justifyContent","marginTop","coordsStyle","App","useState","setLat","setLong","numPersons","setNumPersons","personsList","setPersonsList","setApod","axios","get","res","iss_position","data","catch","err","console","log","number","people","pr","push","process","url","copyright","date","start","end","duration","Container","Row","Col","xs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.159e4d17.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { loadModules } from 'esri-loader';\n\nexport const WebMapView = (props) => {\n    const mapRef = useRef();\n\n    useEffect(\n        () => {\n            // lazy load the required ArcGIS API for JavaScript modules and CSS\n            loadModules(['esri/Map', 'esri/views/MapView', 'esri/Graphic'], { css: true })\n                .then(([ArcGISMap, MapView, Graphic]) => {\n                    const map = new ArcGISMap({\n                        basemap: 'dark-gray'\n                    });\n\n                    let pos = {\n                        type: 'point',\n                        longitude: props.long,\n                        latitude: props.lat\n                    }\n                    let color = {\n                        type: 'simple-marker',\n                        color: [226, 119, 40],\n                        outline: {\n                            color: [225, 225, 225],\n                            width: 1\n                        }\n                    };\n                    \n                    const posGraphic = new Graphic({\n                        geometry: pos,\n                        symbol: color\n                    })\n\n                    // load the map view at the ref's DOM node\n                    const view = new MapView({\n                        container: mapRef.current,\n                        map: map,\n                        center: [-118, 35],\n                        zoom: 1,\n                        ui: {\n                            components: [\"attribution\"]\n                        }\n                    });\n\n                    view.graphics.add(posGraphic);\n\n\n                    return () => {\n                        if (view) {\n                            // destroy the map view\n                            view.container = null;\n                        }\n                    };\n                });\n        }\n    );\n\n    return <div className=\"webmap\" ref={mapRef} style={{ height:'400px',}}/>;\n};\n","import React from 'react';\nimport { hexToRgb }from '@material-ui/core/styles';\n\n\nconst cardStyle = {\n   textAlign: 'center',\n   alignItems: 'center',\n   padding: 0,\n}\n\nconst textStyle = {\n    fontWeight: 400,\n    fontFamily: 'Helvetica',\n    fontSize: 25\n}\n\nconst imgStyle = {\n   backgroundColor: hexToRgb('#2F366C'),\n}\n\nconst CardComponent = (props) => {\n    return(\n        <div style={cardStyle}> \n            <p style={textStyle}>NASA's Astronomy Picture of the Day</p>\n            <img src={props.apod[0]} style={imgStyle} />\n            <p>&copy;{props.apod[1]}, {props.apod[2]}</p>\n        </div>\n    ); \n}\n\n\n\nexport default CardComponent;","import React from 'react';\nimport { hexToRgb } from '@material-ui/core';\n\nconst PersonStyle = {\n    padding: 2.5,\n    backgroundColor: hexToRgb('#2F366C'),\n    textDecoration: 'none',\n    color: 'whitesmoke' \n}\n\nconst Person = (props) => {\n    return(\n        <React.Fragment>\n        <a style={PersonStyle} href={`https://en.wikipedia.org/wiki/${props.name}`} target=\"_blank\">{props.name}</a>\n        <br />\n        <br />\n        </React.Fragment>\n    )\n}\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst listStyle = {\n    fontFamily: 'Helvetica',\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 10\n}\n\nconst PersonList = (props) => {\n\n    const list = props.list.map(name => <Person name={name} />)\n\n    return(\n        <React.Fragment>\n        <div style={listStyle}>{list}</div>\n        </React.Fragment>\n    )\n}\n\nexport default PersonList;\n","// @TODO Clean up import statements\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { WebMapView } from './components/WebMapView';\nimport CardComponent from './components/CardComponent';\nimport PersonList from './components/PersonList';\nimport CountUp from 'react-countup';\nimport './styles/App.css'\nimport { Row, Container, Col } from 'react-bootstrap';\nrequire('dotenv')\n\nconst titleStyle = {\n    fontFamily: 'Helvetica',\n    fontSize: 30,\n    justifyContent: 'center',\n    textAlign: 'center',\n    marginTop: 75\n}\n\nconst coordsStyle = {\n    fontFamily: 'Helvetica',\n    fontSize: 50,\n    textAlign: 'center',\n}\n\nconst mapStyle = {\n    width: 600,\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n\n}\n\n\n\nconst App = () => {\n    const [lat, setLat] = useState(0);\n    const [long, setLong] = useState(0);\n    const [numPersons, setNumPersons] = useState(0);\n    const [personsList, setPersonsList] = useState([]);\n    const [apod, setApod] = useState('');\n\n    // GET COORDS OF ISS\n    useEffect(() => {\n        axios.get('http://api.open-notify.org/iss-now.json')\n            .then(res => {\n                let { iss_position } = res.data;\n                setLat(() => iss_position.latitude);\n                setLong(() => iss_position.longitude);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n\n    // GET INFO ABOUT HOW MANY PEOPLE ARE IN SPACE\n    useEffect(() => {\n        axios.get('http://api.open-notify.org/astros.json')\n            .then(res => {\n                let list = [];\n                setNumPersons(() => res.data.number);\n                res.data.people.map(pr => list.push(pr.name));\n                setPersonsList(() => list);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    // NASA APOD\n    useEffect(() => {\n        axios.get(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}`)\n            .then(res => {\n                setApod(() => [res.data.url, res.data.copyright, res.data.date]);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n\n\n    return (\n        <React.Fragment>\n            <div style={titleStyle}>The International Space Station is at</div>\n            <div style={coordsStyle}>[\n            {/* LATITUDE */}\n                <CountUp\n                    start={-90}\n                    end={lat}\n                    duration={.75}\n                />,\n            {/* LONGITUDE */}\n                <CountUp\n                    start={-180}\n                    end={long}\n                    duration={.75}\n                />\n        ]</div>\n        <Container>\n            <Row className=\"text-center\">\n                <Col xs={4}><WebMapView lat={lat} long={long} /></Col>\n            </Row>\n        </Container>\n\n            <div style={titleStyle}>There are {numPersons} people aboard the ISS right now. They are:</div>\n            <br />\n\n            <PersonList list={personsList} />\n\n            <CardComponent\n                apod={apod}\n            />\n        </React.Fragment>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}